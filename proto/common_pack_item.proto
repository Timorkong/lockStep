// 背包和道具

import "common_quality.proto";
import "common_game_res.proto";

package Common;

// 包裹类型
enum PackType
{
    PACK_TYPE_INVALID = 0;
    PACK_TYPE_BAG     = 1; // 背包
    PACK_TYPE_EQUIP   = 2; // 装备在身上
    PACK_TYPE_SHOP    = 3; // 商城
}

// 道具类型
enum ItemType
{
    ITEM_TYPE_INVALID          = 0;
    ITEM_TYPE_EQUIP            = 1;        // 武器
    ITEM_TYPE_GEM              = 2;        // 宝石
    ITEM_TYPE_MATERIAL         = 3;        // 装备材料
    ITEM_TYPE_SWAP             = 4;        // Swap物件（产出或者消耗类，比如钱袋）
    ITEM_TYPE_HERO_GIFT        = 5;        // 侠客好感度物件
    ITEM_TYPE_DYNAMIC_PROP     = 6;        // 动态属性类（比如血包）
    ITEM_TYPE_PIECE            = 7;        // 时装碎片
    ITEM_TYPE_GEM_PIECE        = 8;        // 宝石碎片
    ITEM_TYPE_GAME_RES         = 9;        // 金币、声望等GameRes
    ITEM_TYPE_DRAWING_EQUIP    = 10;       // 装备图纸
    ITEM_TYPE_USED_ITEM        = 11;       // 使用型道具
    ITEM_TYPE_REBORN_CARD      = 12;       // 复活卡
    ITEM_TYPE_SOUL_STONE       = 13;       // 灵魂石
    ITEM_TYPE_TRANSFROM_CARD   = 14;       // 变身卡
    ITEM_TYPE_DRAWING_SKILL    = 15;       // 技能图纸
    ITEM_TYPE_DRAWING_TREASURE = 16;       // 宝物图纸
    ITEM_TYPE_DEGREE_BOOK      = 17;       // 学位证书
    ITEM_TYPE_DEGREE_ITEM      = 18;       // 学位相关材料
    ITEM_TYPE_CLOTHES          = 19;       // 时装
    ITEM_TYPE_ARTIFACT         = 20;       // 神器
    ITEM_TYPE_ARTIFACT_CHIP    = 21;       // 神器碎片
    ITEM_TYPE_GIFT_CODE        = 22;       // 礼包码
    ITEM_TYPE_GEM_FORGE        = 23;       // 洗练石
    ITEM_TYPE_FESTIVAL         = 24;       // 节日抽奖道具
    ITEM_TYPE_AWAKE            = 25;       // 觉醒道具
	ITEM_TYPE_HERO_EXP         = 26;       // 英雄升级经验药水
	ITEM_TYPE_HERO_CONSTELLATION    = 27;  // 英雄星盘消耗物品
	ITEM_TYPE_DISCOUNT		        = 28;  // 打折券
    ITEM_TYPE_SUPER_EQUIPMENT       = 29;  // 猫圣装部件
    ITME_TYPE_DIVINE_SOUL           = 30;  // 圣魂
	ITME_TYPE_REBORN_STONE          = 31;  // 转生石
	ITME_TYPE_DIVINE_STONE          = 32;  // 灵石
    ITME_TYPE_MULTIPLE_ITEM         = 33;  // 产出多倍道具
    ITEM_TYPE_GroupHegemonyCoin     = 34;  // 社团战币
    ITEM_TYPE_RESERVED_2            = 35;
    ITEM_TYPE_RESERVED_3            = 36;
    ITEM_TYPE_RESERVED_4            = 37;
    ITEM_TYPE_RESERVED_5            = 38;
}

// 是否可以溢出的定义
enum PackExceed
{
    EXCEED_NOT_ALLOWED     = 0;
    EXCEED_ONCE_ALLOWED    = 1;
    EXCEED_ALWAYS_ALLOWED  = 2;
}

// 道具
message Item
{
    optional sint32         pos         = 1;        // 定位
    optional uint32         id          = 2;        // 基础ID
    optional uint64         guid        = 3;        // 唯一ID
    optional sint32         count       = 4;        // 数量
    optional sint32         lev         = 5;        // 等级
    optional QualityType    quality     = 6[default = QUALITY_INVALID];        // 品质
    optional sfixed64       expire_time = 7;        // 过期时间 
    repeated Item           inlaid_list = 12;       // 镶嵌物
    optional sint64         exp         = 13;       // 经验值
    optional sint32         star        = 14;       // 星级
    optional sint32         star_exp    = 15;       // 升星经验
    optional bytes          data        = 90;       // 动态扩展数据，根据类型解析
    optional PackType       pack_type   = 100;      // 暂时只有客户端使用该字段
}

// 包裹
message Pack
{
    repeated Item   item_list       = 1;    // 道具容器
    optional int32  capacity        = 2;    // 包裹容量(包含了extra_capacity)
    optional int32  extra_capacity  = 3;    // 动态增加的容量
}

enum EQUIP_POS
{
    EQUIP_POS_INVALID   = 0;
    EQUIP_POS_WEAPON    = 1;    // 武器
    EQUIP_POS_JEWELLERY = 2;    // 饰品
    EQUIP_POS_COAT      = 3;    // 上衣
    EQUIP_POS_FEET      = 4;    // 鞋
    EQUIP_POS_TROUSER   = 5;    // 裤子
    EQUIP_POS_WAISTBAND = 6;    // 腰带
    EQUIP_POS_RESERVED_1 = 7;
    EQUIP_POS_RESERVED_2 = 8; 
}

// 收集层级记录
message Collection
{
    optional uint32 layer       = 1;
    repeated sint32 idx_list    = 2;
    repeated sint32 lev_list    = 3; // 宝物等级 
}


enum CollectionShopType
{
    SHOP_TYPE_COIN    = 1; // 金币商城
    SHOP_TYPE_GOLD    = 2; // 钻石商城
    SHOP_TYPE_MYSTERY = 3; // 神秘商城
}

// 宝物商城记录
message CollectionShop
{
    message Goods
    {
        optional uint32 id          = 1;
        optional bool   purchased   = 2; // 已购买标记
    }
    
    repeated Goods  coin_goods_list     = 1; // 金币商城物品列表
    repeated Goods  gold_goods_list     = 2; // 钻石商城物品列表
    repeated Goods  mystery_goods_list  = 3; // 神秘商城物品列表
    repeated Goods  antique_goods_list  = 4; // 古董商店物品列表
    repeated Goods  battle_goods_list   = 5; // 社团战商店物品列表
    
    optional sint32 mystery_refresh_count   = 11; // 神秘商店刷新次
    optional sint32 gold_refresh_count      = 10; // 钻石商店刷新次数
    
    optional sfixed64 coin_refresh_timestamp    = 12; // 金币商店刷新时间戳
    optional sfixed64 gold_refresh_timestamp    = 13; // 钻石商店刷新时间戳
    optional sfixed64 mystery_refresh_timestamp = 14; // 神秘商店物刷新时间戳
    optional sfixed64 mystery_keep_timestamp    = 15; // 神秘商店持续时间(vip<7有效)
    optional sint32   pre_antique_shop_lev      = 16; // 古董店的前一个等级，用于升级刷新
    optional sfixed64 antique_refresh_timestamp = 17; // 古董商店刷新时间戳
    optional sint32   antique_refresh_count     = 18; // 古董商店刷新次数
    optional sfixed64 battle_refresh_timestamp  = 19; // 社团战商店刷新时间戳
    optional sint32   battle_refresh_count      = 20; // 社团战商店刷新次数
}

// 抽奖类型
enum LotteryType
{
    TEA_EGG_LOTTERY  = 1; // 抽茶叶蛋
    GOLD_EGG_LOTTERY = 2; // 抽黄金蛋
    CAKE_LOTTERY     = 3; // 抽切糕
}

// 奖励类型
enum LotteryAwardType
{
    TEA_EGG_FREE_AWARD   = 1;
    TEA_EGG_AWARD        = 2;
    TEA_EGG_SUPER_AWARD  = 3;
    GOLD_EGG_FREE_AWARD  = 4;
    GOLD_EGG_AWARD       = 5;
    GOLD_EGG_HERO_AWARD  = 6;
    GOLD_EGG_HERO_AWARD2 = 7;
    GOLD_EGG_HERO_AWARD3 = 8;
    CAKE_AWARD           = 9;
    CAKE_SUPER_AWARD     = 10;
    CAKE_HERO_AWARD      = 11;
    SERVER_HERO_AWARD    = 12;
    CAKE_HERO_WEEK_AWARD = 13;
    LOTTERY_AWARD_RESERVED_1 = 14;
    LOTTERY_AWARD_RESERVED_2 = 15;
}

// 抽奖商品类型
enum LotteryShopGoodsType
{
    TEA_EGG_EXCHANGE_GOODS  = 1;
    GOLD_EGG_EXCHANGE_GOODS = 2;
    CAKE_EXCHANGE_GOODS     = 3;
}

// 抽奖兑换类型
enum LotteryExchangeType
{
    EXCHANGE_NORMAL_GOODS     = 1; // 兑换普通商品
    EXCHANGE_TREASURE_GOODS   = 2; // 兑换镇店之宝
}

// 抽奖事件
enum LotteryEvent
{
    NULL_EVENT        = 1;
    SUPER_AWARD_EVENT = 2;
    UNLOCK_HERO_EVENT = 3;
}

// 抽奖资源
message LotteryRes
{
    repeated GameRes      award   = 1;
    optional uint32       hero_id = 2;
    optional LotteryEvent event = 3[default = NULL_EVENT];
}

// 抽奖兑换商店
message LotteryShop
{
    message ExchangeGoods
    {
        optional uint32 id          = 1;
        optional bool   purchased   = 2[default = false]; // 已购买标记
        repeated GameRes item_list  = 3;
        repeated GameRes cost_list  = 4;
    }
    repeated ExchangeGoods  normal_goods_list   = 1; // 普通商品列表
    repeated ExchangeGoods  treasure_goods_list = 2; // 镇店之宝列表

    //optional sfixed64   auto_refresh_timestamp  = 11; // 下次系统刷新时间戳
    optional sfixed64   auto_refresh_timestamp  = 12; // 下次系统刷新时间戳
}

// 使用道具 
// 开启条件类型
enum UsedItemCondType
{
    USED_ITEM_COND_TYPE_NORMAL_LEV = 1; // 普通等级
    USED_ITEM_COND_TYPE_VIP_LEV    = 2; // VIP 等级
}

// 开启条件
message UsedItemOpenCond
{
    optional UsedItemCondType type = 1;
    optional sint32           lev  = 2;
}

message DragonBall
{
    optional uint32   one_star_dragon_count     = 1;
    optional uint32   two_star_dragon_count     = 2;
    optional uint32   three_star_dragon_count   = 3;
    optional uint32   four_star_dragon_count    = 4;
    optional uint32   five_star_dragon_count    = 5;
    optional uint32   six_star_dragon_count     = 6;
    optional uint32   seven_star_dragon_count   = 7;
}

message DragonAward
{
    optional uint32         pos    = 1;
    repeated Common.GameRes award  = 2;
}

message LotteryTable 
{
    optional sint32         type  = 1;
    repeated Common.GameRes award = 2;
}

// 神龙抽奖类型
enum LotteryDragonType
{
    LUCKY_DRAGON     = 1; // 幸运神龙
    // 龙珠兑换抽奖
    TWO_DRAGON_BALL  = 2; // 双龙戏珠
    FOUR_DRAGON_BALL = 3; // 四神宝珠
    SEVEN_DRAGON_BALL= 4; // 七星连珠
}

// 神龙抽奖产出类型
enum LotteryDragonOutputType
{
    SINGLE_LOTTERY          = 1; // 砸蛋    
    INDIVIDUAL_LOTTERY      = 2; // 砸蛋个人奖, 7次的时候
    TWO_DRAGON_LOTTERY      = 3; // 双龙戏珠奖
    FOUR_DRAGON_LOTTERY     = 4; // 四神宝珠奖
    SEVEN_DRAGON_LOTTERY    = 5; // 七星连珠奖
    DRAGON_BALL_LOTTERY     = 6; // 龙珠奖, 8次的时候
}

enum LotterySchoolOutputType
{
    NORMAL_OUTPUT            = 1; // 普通兑换产出
    TEN_NORMAL_OUTPUT        = 2; // 普通10连产出
    GOLD_OUTPUT              = 3; // 钻石兑换产出
    TEN_GOLD_OUTPUT          = 4; // 钻石10连产出
}

enum SchoolTreasureStoreType
{
    STORE_NUM_ONE             = 1;
    STORE_NUM_TWO             = 2;
    STORE_NUM_THREE           = 3;
}

enum SchoolTreasureLotteryType
{
    FREE_LOTTERY_TYPE        = 1;
    GOLD_LOTTERY_TYPE        = 2;
}
