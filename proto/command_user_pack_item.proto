// 背包道具相关协议

import "common_pack_item.proto";
import "common_game_res.proto";
import "common_role.proto";
import "common_multiple_item.proto";

package Cmd.User;

// 查询背包
message QUERY_PACK_REQ
{
    //optional Common.PackType pack_type  = 1 [default = PACK_TYPE_BAG];
}

message QUERY_PACK_RSP
{
    optional Common.Pack pack   = 1;
}

// 检查背包是否已满
message CHECK_PACK_FULL_REQ
{    
}

message CHECK_PACK_FULL_RSP
{
    optional bool flag = 1; // 满: true; 没满: false
}

// 整理背包
message TIDY_PACK_REQ
{
}

message TIDY_PACK_RSP
{
    optional Common.Pack pack   = 1;
}

// 穿上装备
message PUT_ON_EQUIP_REQ
{
    optional uint64 guid = 1;
}

message PUT_ON_EQUIP_RSP
{
	optional Common.Pack        bag_pack    = 1;
	optional Common.RoleInfo diff_role_info = 15;
}

// 脱下装备
message TAKE_OFF_EQUIP_REQ
{
    optional uint64 guid = 1;
}

message TAKE_OFF_EQUIP_RSP
{
	optional Common.Pack        bag_pack    = 1;
	optional Common.RoleInfo diff_role_info = 15;
}

// 装备升级
message UPGRADE_EQUIP_REQ
{
    optional uint64 guid  = 1;
    optional uint32 count = 2 [default = 1]; // 升级次数
}

message UPGRADE_EQUIP_RSP
{
    optional Common.RoleInfo diff_role_info = 15;
}

// 装备进阶
message ADVANCED_EQUIP_REQ
{
    optional uint64 guid      = 1;
    optional bool   gold_fill = 2[default = false]; // 是否用钻石补齐
}

// 装备升星
message ADD_EQUIP_STAR_REQ
{
    optional uint64 guid = 1;
}

message ADD_EQUIP_STAR_RSP
{
	optional Common.Pack     bag_pack       = 1;
    optional Common.RoleInfo diff_role_info = 15;
}

message ADVANCED_EQUIP_RSP
{
    optional Common.Pack     bag_pack = 1;
    optional Common.RoleInfo diff_role_info = 15;
}

// 镶嵌宝石
message INLAY_GEM_REQ
{
    optional uint64 gem_guid    = 1;
    optional uint64 equip_guid  = 2;
}

message INLAY_GEM_RSP
{
    optional Common.Pack     bag_pack = 1;
    optional Common.RoleInfo diff_role_info = 15;
}

// 升级宝石
message UPGRADE_GEM_REQ
{
    optional uint64 gem_guid   = 1;
    optional uint64 equip_guid = 2;
}

message UPGRADE_GEM_RSP
{
    optional Common.Pack     bag_pack = 1;
    optional Common.RoleInfo diff_role_info = 15;
}

// 使用道具
message USE_ITEM_REQ
{
    optional uint64 guid  = 1;
    optional sint32 count = 2;
}

message USE_ITEM_RSP
{
    optional Common.Pack    pack        = 1;
    repeated Common.GameRes output_list = 2;
    optional Common.RoleInfo diff_role_info  = 15;
}

// 使用加倍道具
message USE_MULTIPLE_ITEM_REQ
{
    optional uint32 id = 1;
}

message USE_MULTIPLE_ITEM_RSP
{
    optional Common.Pack            pack                = 1;
    repeated Common.MultipleItem    multiple_item_list  = 2;
}

message QUERY_MULTIPLE_ITEM_STATE_REQ
{
}

message QUERY_MULTIPLE_ITEM_STATE_RSP
{
    repeated Common.MultipleItem    multiple_item_list  = 1;
}

// 卖出道具
message SELL_ITEM_REQ
{
    optional uint64 guid  = 1;
    optional int32  count = 2;
}

message SELL_ITEM_RSP
{
    optional Common.Pack bag_pack = 1;
    optional Common.RoleInfo diff_role_info = 15;
}

// 兑换道具
message EXCHANGE_ITEM_REQ
{
    optional uint64 guid  = 1;
}

message EXCHANGE_ITEM_RSP
{
    optional Common.Pack bag_pack = 1;
}

// 购买道具
message BUY_ITEM_REQ
{
    optional uint32 id    = 1;
    optional sint32 count = 2;
}

message BUY_ITEM_RSP
{
    optional Common.Pack     bag_pack       = 1;
    optional Common.RoleInfo diff_role_info = 15;
}

// 分解道具
message DECOMPOSITION_ITEM_REQ
{
    repeated Common.GameRes item_list  = 1;
}

message DECOMPOSITION_ITEM_RSP
{
    optional Common.Pack pack = 1;
    optional Common.RoleInfo diff_role_info  = 15;
}

// 一键合成
message COMPOSITE_ALL_ITEM_REQ
{
}

message COMPOSITE_ALL_ITEM_RSP
{
    optional Common.Pack     bag_pack       = 1;
}

///////////////////////////////////////
// 收集
///////////////////////////////////////
message QUERY_COLLECTION_LIST_REQ
{
}

message QUERY_COLLECTION_LIST_RSP
{
    repeated Common.Collection list = 1;
}

message EXCHANGE_TREASURE_REQ
{
    optional uint32 layer   = 1;
    optional sint32 idx     = 2;
    optional bool   gold_fill = 3[default = false];
}

message EXCHANGE_TREASURE_RSP
{
    repeated Common.Collection list = 1;

    optional Common.RoleInfo diff_role_info  = 15;
}

message QUERY_COLLECTION_SHOP_REQ
{
}

message QUERY_COLLECTION_SHOP_RSP
{
    optional Common.CollectionShop shop = 1;
}

message BUY_COLLECTION_SHOP_GOODS_REQ
{
    optional Common.CollectionShopType  type    = 1 [default = SHOP_TYPE_COIN];
    optional sint32                     idx     = 2;
}

message BUY_COLLECTION_SHOP_GOODS_RSP
{
    optional Common.CollectionShop shop = 1;
    optional Common.RoleInfo diff_role_info  = 15;
}

message REFRESH_COLLECTION_SHOP_REQ
{
    optional Common.CollectionShopType type = 1 [default = SHOP_TYPE_COIN];
}

message REFRESH_COLLECTION_SHOP_RSP
{
    optional Common.CollectionShop shop = 1;
    optional Common.RoleInfo diff_role_info  = 15;
}

// =============================================================================
// 抽奖相关 
// =============================================================================
// 抽奖
message BUY_LOTTERY_REQ
{
    optional Common.LotteryType type  = 1[default = TEA_EGG_LOTTERY];
    optional sint32             count = 2; // 次数(目前允许1次和10次)
    optional bool               free  = 3[default = false]; // 是否要免费抽 
}

message BUY_LOTTERY_RSP
{
    repeated Common.LotteryRes  award_list   = 1;
    optional sint32             hero_stone   = 2;
    optional Common.LotteryType type         = 3[default = TEA_EGG_LOTTERY];
    optional Common.RoleInfo diff_role_info  = 15;
}

// 抽奖兑换商店
message QUERY_LOTTERY_SHOP_REQ
{
}

message QUERY_LOTTERY_SHOP_RSP
{
    optional Common.LotteryShop lottery_shop  = 1;
}

// 抽奖商店里兑换物品
message EXCHANGE_LOTTERY_SHOP_GOODS_REQ
{
    optional uint32                     index = 1; // 商品索引
    optional Common.LotteryExchangeType type  = 2[default = EXCHANGE_TREASURE_GOODS];
}

message EXCHANGE_LOTTERY_SHOP_GOODS_RSP
{
    optional Common.LotteryShop lottery_Shop = 1;
    optional Common.RoleInfo diff_role_info  = 15;
}

message BUY_LOTTERY_SPECIAL_GOODS_REQ
{
    optional uint32 goods_id = 1;
}

message BUY_LOTTERY_SPECIAL_GOODS_RSP
{
    optional Common.Pack     bag_pack       = 1;       
    optional Common.RoleInfo diff_role_info = 15;
}

message QUERY_LOTTERY_SPECIAL_GOODS_REQ
{
}

message QUERY_LOTTERY_SPECIAL_GOODS_RSP
{
    optional uint32     id        = 1;
    optional sint32     buy_count = 2;
    optional sfixed64   countdown = 3;
}

//查询抽奖价格
message QUERY_LOTTERY_INFO_REQ
{
}

message QUERY_LOTTERY_INFO_RSP
{
    optional sint32 tea_egg_price      = 1;
    optional sint32 ten_tea_egg_price  = 2;
    optional sint32 gold_egg_price     = 3;
    optional sint32 ten_gold_egg_price = 4;
    optional sint32 cake_price         = 5;
    optional sfixed64 tea_egg_cd       = 6; // 免费抽奖cd
    optional sfixed64 gold_egg_cd      = 7;
    optional sint32 free_count         = 8; // 剩余免费次数
    optional sint32 tea_card           = 9;
    optional sint32 gold_card          = 10;
    optional sint32 cake_card          = 11;
    optional sint32 hero_need_count    = 12; // 出英雄还需几次
    optional sint32 ten_cake_price     = 13;
    optional sfixed64 cake_cd          = 14;
    optional sint32 cake_hero_need_count = 15; // 切糕出英雄还需几次
    optional uint32 display_item       = 16; // 大奖展示
}

// 神龙抽奖协议
message QUERY_LUCKY_DRAGON_REQ
{
    optional bool   is_refreshed    = 1[default = false]; // 是否刷新
} 

message QUERY_LUCKY_DRAGON_RSP
{
    repeated Common.DragonAward award_list      = 1;  // 奖励列表
    repeated Common.DragonAward ball_award_list = 2;  // 龙珠奖励列表
    optional Common.DragonBall  dragon_ball     = 3;  // 当前各种龙珠数量
}

message LOTTERY_LUCKY_DRAGON_REQ
{
    repeated uint32                   ball_pos    = 2; // 砸那几个蛋
}

message LOTTERY_LUCKY_DRAGON_RSP
{
    repeated Common.DragonAward award_list      = 1;  // 普通奖励列表
    optional uint32             dragon_ball_id  = 2;  // 奖励龙珠id(0时没有奖励龙珠)
    optional Common.RoleInfo    diff_role_info  = 15;
}

message LOTTERY_DRAGON_BALL_REQ
{
    optional Common.LotteryDragonType type        = 1[default = TWO_DRAGON_BALL];
}

message LOTTERY_DRAGON_BALL_RSP
{
    repeated Common.DragonAward ball_award_list         = 1;  // 龙珠奖励列表
    optional Common.DragonBall  dragon_ball             = 2;  // 当前各种龙珠数量
    optional Common.LotteryDragonOutputType output_type = 3[default = TWO_DRAGON_LOTTERY];  // 奖励产出类型
}

// 校园庆典抽奖协议
message QUERY_SCHOOL_LOTTERY_REQ
{
}

message QUERY_SCHOOL_LOTTERY_RSP
{
    optional sint32     normal_certificate_num  = 2;
    optional sint32     super_certificate_num   = 3;
    optional sint32     coin_cost               = 4;
    optional sint32     gold_cost               = 5;
}

message LOTTERY_SCHOOL_REQ
{
    optional bool   use_gold_lottery        = 1[default = false]; // 使用钻石抽
    optional sint32 count                   = 2;
}

message LOTTERY_SCHOOL_RSP
{
    repeated Common.GameRes                 award_list     = 1;
    optional Common.LotterySchoolOutputType output_type    = 2 [default = NORMAL_OUTPUT];
    optional sint32              normal_certificate_num    = 3;
    optional sint32              super_certificate_num     = 4;
    optional Common.RoleInfo     diff_role_info            = 15;
}

message OPEN_WHICH_LOTTERY_REQ
{
    
}

message OPEN_WHICH_LOTTERY_RSP
{
    // 0 都不开放, 1 开放神龙抽奖, 2 开放校园庆典抽奖
    optional sint32     which       = 1;
}

message QUERY_LOTTERY_TABLE_REQ
{
    optional sint32     type        = 1;
}

message QUERY_LOTTERY_TABLE_RSP
{
    repeated Common.LotteryTable table_list = 1;
}

// =============================================================================
// 旧的协议(新的协议名称全部大写)
// =============================================================================

// 宝石合成
message GemSynthesiseReq
{
    optional uint64 gem_guid    = 1;
    optional uint32 count       = 2;    // 合成数量
}

message GemSynthesiseRsp
{
    optional Common.Pack    bag_pack    = 1;

	optional Common.RoleInfo diff_role_info = 15;
}

// 卖出道具
message SellItemReq
{
    optional uint64 item_guid   = 1;
}

message SellItemRsp
{
    optional Common.Pack        bag_pack    = 2;
	optional Common.RoleInfo    diff_role_info = 15;
}

// 使用道具
message UseItemReq
{
    optional uint64 item_guid = 1;
}

message UseItemRsp
{
    optional Common.Pack pack = 1;

    optional Common.RoleInfo diff_role_info  = 15;
}

// 获得装备通知
message GetItemNotice
{
    optional Common.Pack bag_pack = 1;
}

