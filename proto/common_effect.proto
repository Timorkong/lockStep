// 数值效果

package Common;

enum EffectType
{
    EFFECT_TYPE_INVALID         = 0;

    EFFECT_TYPE_ABSOLUTE_MAX_HP     = 101;
    EFFECT_TYPE_ABSOLUTE_CATK       = 102;
    EFFECT_TYPE_ABSOLUTE_CDEF       = 103;
    EFFECT_TYPE_ABSOLUTE_SATK       = 104;
    EFFECT_TYPE_ABSOLUTE_SDEF       = 105;
    EFFECT_TYPE_ABSOLUTE_CRIT       = 106;
    EFFECT_TYPE_ABSOLUTE_DECRIT     = 107;
    EFFECT_TYPE_ABSOLUTE_INCHURT    = 108;
    EFFECT_TYPE_ABSOLUTE_INHURT     = 109;
    EFFECT_TYPE_ABSOLUTE_DEHURT     = 110;
    EFFECT_TYPE_ABSOLUTE_FORCE      = 111;
    EFFECT_TYPE_ABSOLUTE_INTEL      = 112;
}

message Effect
{
    optional EffectType type    = 1 [default = EFFECT_TYPE_INVALID];
    optional float      val     = 2;
}

message BuffFx
{
    optional string             fx_name             = 1; // 特效名称
    optional string             bind_bone_name      = 2; // 绑定骨骼
}

message SkillDamageUp
{
    optional sint32     pos     = 1;
    optional float      rate    = 2;
}

message EffectNum
{
    optional EffectType type    = 1 [default = EFFECT_TYPE_INVALID];
    optional sint32     val     = 2;
}

message EffectHasLimit
{
    optional EffectType type    = 1 [default = EFFECT_TYPE_INVALID];
    optional float      val     = 2;
    optional float      limited = 3;
}

// 数值效果组，便于效果更新时候只替换部分
enum EffectCategory
{
    EFFECT_CATEGORY_INVALID     = 0;
    EFFECT_CATEGORY_EQUIP       = 1;    // 装备加成
    EFFECT_CATEGORY_COLLECTION  = 2;    // 宝物收集加成
    EFFECT_CATEGORY_GEM         = 3;    // 宝石加成
    EFFECT_CATEGORY_DEGREE      = 4;    // 学位证书加成
    EFFECT_CATEGORY_CLOTHES     = 5;    // 时装加成
    EFFECT_CATEGORY_FELLOW      = 6;    // 英雄羁绊加成
    EFFECT_CATEGORY_COMBINATION = 7;    // 英雄组合加成(百分比)
    EFFECT_CATEGORY_TITLE       = 8;    // 称号加成
    EFFECT_CATEGORY_GROUP_EQUIP = 9;    // 社团装备
    EFFECT_CATEGORY_CONSTELLATION = 10; // 星盘加成
}

message RateBuff
{
    optional float  rate    = 1; // 概率
    repeated uint32 buff_id = 2;
}

message RateBuffBoth
{
    optional float  rate            = 1; // 概率
    repeated uint32 buff_self_id    = 2;
    repeated uint32 buff_enemy_id   = 3;
}

message SkillRateBuff
{
    optional sint32     pos         = 1;
    optional RateBuff   rate_buff   = 2;
}

//message ShieldBuff
//{
//    optional sint64 capacity    = 1; // 吸收量
//    optional float  add_hp_rate = 2; // 根据血量增加
//    repeated uint32 buff_id     = 3; // 附加buff
//}