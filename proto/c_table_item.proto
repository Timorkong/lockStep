
import "common_quality.proto";
import "common_pack_item.proto";
import "common_effect.proto";
import "common_game_res.proto";
import "common_role.proto";
import "common_degree.proto";
import "common_multiple_item.proto";
package Table;

message ITEM
{
    optional uint32 id      			= 1;
    optional string name    			= 2;
	optional Common.ItemType type		= 3 [default = ITEM_TYPE_INVALID];
	optional string desc    			= 4;
	optional string file_name 			= 5;
	optional Common.EQUIP_POS pos	  	= 7 [default = EQUIP_POS_INVALID];
	repeated Common.GameRes sell_output_list = 8;    // 出售产出
	repeated Common.GameRes use_output_list  = 10;   // 使用产出
	
    optional sint64 base_exp                        = 12;//学位证基础经验
    optional Common.DegreeType degreeType           = 13[default = TYPE_INVALID];//学位证类型
    optional Common.DegreeQualityType degreeQuality = 14[default = DEGREE_INVALID];//学位证品质

	repeated sint32 			    copyChapterNumber = 15;//精英，魔王关第几章节获得该物品
	repeated string					descGoods	      = 16;//对copyChapterNumber字段的描述
	
	repeated Common.GameResWithProb  use_random_output_list = 17;     // 随机使用产出
	
	optional uint32 background_type     = 18;   //背景类型
    repeated Common.GameRes use_consume_list    = 19;   // 使用消耗
    repeated Common.GameRes origional_consume_list    = 20;   // 原价使用消耗
}

message ITEM_ARRAY
{
    repeated ITEM   rows    = 1;
}

// 装备属性
message EQUIP_ATTR
{
    optional uint32                 id              = 1;
    optional Common.QualityType     quality         = 2 [default = QUALITY_INVALID];
	optional string                 name            = 3;
    repeated Common.Effect          base_effect_list  = 4; // 基础特效
    repeated Common.Effect          add_effect_list   = 5; // 升级特效加成
    repeated Common.GameRes         advance_cost      = 6; // 升品质消耗
	optional string                 file_name         = 7;
}

message EQUIP_ATTR_ARRAY
{
    repeated EQUIP_ATTR rows = 1;
}

// 宝石镶嵌表
message EQUIP_GEM
{
    optional uint32 id      = 1; // 装备ID
    repeated uint32 gem_arr = 2; // 可镶嵌的宝石
}

message EQUIP_GEM_ARRAY
{
    repeated EQUIP_GEM rows = 1;
}

// 宝石消耗表
message GEM_CONSUME
{
    optional sint32         lev       = 1;
    repeated Common.GameRes cost_list = 2; // 宝石镶嵌/升级消耗
}

message GEM_CONSUME_ARRAY
{
    repeated GEM_CONSUME rows = 1;
}

// 宝石属性表
message GEM_ATTR
{
    optional uint32        	id          = 1;
    optional sint32        	lev         = 2;
    repeated Common.Effect 	effect_list = 3;
    optional string        	name        = 4;
    optional string			file_name   = 5;
	optional string			desc		= 6;
	
	repeated sint32 		copyChapterNumber = 7;//精英，魔王关第几章节获得该物品
	repeated string			descGoods	      = 8;//对copyChapterNumber字段的描述
}

message GEM_ATTR_ARRAY
{
    repeated GEM_ATTR rows = 1;
}


// 证书属性
message DEGREE_ATTR
{
    optional uint32                 id          = 1;
    optional string                 name        = 2;
    repeated Common.Effect    base_effect_list  = 3; // 基础特效
    repeated Common.Effect    add_effect_list   = 4; // 升级特效加成
}

message DEGREE_ATTR_ARRAY
{
    repeated DEGREE_ATTR rows = 1;
}


//证书经验 
message DEGREE_EXP
{
    optional sint32          lev  = 1;
    optional sint64          exp1 = 2;
    optional sint64          exp2 = 3;
    optional sint64          exp3 = 4;
    optional sint64          exp4 = 5;
    optional sint64          exp5 = 6;
    optional sint64          exp6 = 7;
    optional sint64			 exp7 = 8;
    optional sint64          exp8 = 9;    
}

message DEGREE_EXP_ARRAY
{
    repeated DEGREE_EXP rows = 1;
}

message ITEM_PRICE
{
    optional uint32 id    = 1;
    optional sint32 price = 2;
}

message ITEM_PRICE_ARRAY
{
    repeated ITEM_PRICE rows = 1;
}

// 证书分解
message DEGREE_DECOMPOSITION
{
    optional uint32                 id  = 1; // 整数ID
    repeated Common.GameRes output_list = 2; // 分解产出
}

message DEGREE_DECOMPOSITION_ARRAY
{
    repeated DEGREE_DECOMPOSITION rows = 1;
}

message EQUIP_UPSTAR
{
	optional int32					lev = 1; //装备星级
	optional float					base_effect = 2;//属性加成
	optional int32         			consume_count = 3;//升星消耗
	optional int32					sum_exp = 4;//当前等级升星总经验
}


message EQUIP_UPSTAR_ARRAY
{
    repeated EQUIP_UPSTAR rows = 1;
}

message EQUIP_UPSTAR_ITEM
{
	optional uint32					id = 1; //装备ID
	optional uint32					consume_id = 2;//需求道具ID
	optional string         		file_name = 3;//图标文件名
}

message EQUIP_UPSTAR_ITEM_ARRAY
{
    repeated EQUIP_UPSTAR_ITEM rows = 1;
}

message HERO_EXP_ITEM
{
	optional uint32					id = 1; 
	optional int32					exp = 2;//经验
}

message HERO_EXP_ITEM_ARRAY
{
    repeated HERO_EXP_ITEM rows = 1;
}

message CONSTELLATION_ITEM
{
	optional int32 				id  	=1;
	optional int32				lev		=2;
	optional string 			icon 	=3;
}
message CONSTELLATION_ITEM_ARRAY
{
	repeated CONSTELLATION_ITEM rows = 1;
}

message ITEM_DECOMPOSITION
{
    optional uint32                 id  	= 1;
	optional uint32                 lev  	= 2;
    repeated Common.GameRes output_list 	= 3;
	optional string 				name	= 4;
}

message ITEM_DECOMPOSITION_ARRAY
{
    repeated ITEM_DECOMPOSITION rows = 1;
}

// 特殊道具效果
message MULTIPLE_ITEM_EFFECT
{
    optional uint32                  id          = 1;
    repeated Common.GameResEffect    effect_list = 2;
    optional sfixed64                valid_time  = 3;
}

message MULTIPLE_ITEM_EFFECT_ARRAY
{
    repeated MULTIPLE_ITEM_EFFECT rows = 1;
}


message EQUIP_LEVUP
{
    optional sint32         lev       = 1;
    repeated Common.GameRes cost_list = 2;
}

message EQUIP_LEVUP_ARRAY
{
    repeated EQUIP_LEVUP rows = 1;
}

message SKILL_LEVUP
{
    optional sint32         lev       = 1;
    repeated Common.GameRes cost_list = 2;
}

message SKILL_LEVUP_ARRAY
{
    repeated SKILL_LEVUP rows = 1;
}

message DEGREE_ADVANCE
{
    optional uint32         quality     = 1;
    repeated Common.GameRes cost_list   = 2;
}

message DEGREE_ADVANCE_ARRAY
{
    repeated DEGREE_ADVANCE rows = 1;
}