// 角色

import "common_quality.proto";
import "common_pack_item.proto";
import "common_mission.proto";
import "common_skill.proto";
import "common_sp.proto";
import "common_game_res.proto";
import "common_clothes.proto";
import "common_effect.proto";
import "common_pet.proto";
import "common_multiple_item.proto";
import "common_super_equipment.proto";

package Common;

// 模拟考试状态定义                                                 
enum MockExamState               
{                            
    MOCK_EXAM_NOTSTART              = 1;  //没开始
    MOCK_EXAM_ONGOING               = 2;  //正在答题
    MOCK_EXAM_FINISHED              = 3;  //结束了
    MOCK_EXAM_RESERVED_1            = 4;
    MOCK_EXAM_RESERVED_2            = 5;
}

// 人气活动状态码
enum ActivityStateRet
{
    ACTIVITY_START_ENABLE  = 0; // 可参与
    ACTIVITY_NOT_START     = 1; // 未开始
    ACTIVITY_RESERVED_1    = 2;
    ACTIVITY_RESERVED_2    = 3;
}

// 爬塔英雄
message ClimbTowerHero
{
    optional HeroInfo hero_info = 1;
    optional float    hp        = 2;
    //optional float    anger     = 3;
    optional uint32   owner_id  = 4; // 英雄所有者,自己则不填
    optional Numeric  numeric   = 5; // 英雄所有者的数值,自己的不填  
    optional float    anger     = 6[default = 200.0];
}

// 英雄信息
message HeroInfo
{
    // 英雄的基础属性 ---- 预留 1~20
    optional uint32         id         = 1;
    optional QualityType    quality    = 2[default = QUALITY_INVALID];
    optional sint32         star       = 4;
    //optional sint32      attack_fc  = 5; // 攻击战斗指数
    //optional sint32      defense_fc = 6; // 防御战斗指数
    //optional sint32      extra_hp   = 7; // 额外血量(变身效果)
    optional sint32         exp        = 8;
    //repeated HeroPracticeEffect deprecated    = 9 [deprecated = true];    // 英雄洗练属性
    //repeated HeroPracticeEffect deprecated    = 10 [deprecated2 = true];  // 英雄洗练属性
    optional sint64         fc         = 9; // 英雄战斗力
    
    // 神器(英雄专属装备) ---- 预留 20~30
    // 目前有意义的字段: guid, id, lev, quality, inlaid_list
    optional Item artifact          = 20;
    optional bool use_artifact_buff = 21[default = true];

    // 洗练
    repeated HeroPracticeEffect practice_effect = 31;

    // 觉醒
    optional AwakeInfo      awake_info   = 40;
    optional sint64         awake_fc     = 41;
}

message HeroPracticeEffect
{
    optional uint32         pos = 1;    
    optional Common.Effect  effect = 2; // 洗练属性
}

message AwakeInfo
{
    optional sint32 awake_exp  = 1;
    optional sint32 awake_lev  = 2;
    optional sint32 awake_num  = 3;
    repeated AwakeSkill awake_skill = 4;
    optional sint32 awake_fail = 5; // 觉醒失败次数, 用于保底
    optional sint32 reborn_lev = 6; // 转生等级
    optional sint32 reborn_fail = 7; // 转生失败
}

message AwakeSkill
{
    optional uint32 buffer_id = 1;
    optional sint32 lev       = 2;
    optional bool   isusing   = 3;
}

message ConstellationEntry
{
    optional uint32     pos          = 1;
    optional uint32     hero_id      = 2;
    // optional uint32     buffer_id    = 3;
    // optional sint32     lev          = 4;
}

message ConstellationInfo
{
    optional uint32          pos       = 1;
    optional Common.HeroInfo hero_info = 2;
}
message ConstellationAllInfo
{
    repeated Common.ConstellationInfo constellation_info_list = 1;
    repeated Common.HeroInfo uninstall_hero_list              = 2;
    repeated Common.Effect effect_list                        = 3;
}


// 英雄五行元素
enum HeroElementType
{
    HERO_ELEMENT_INVALID = 0;
    HERO_ELEMENT_GOLD  = 1; 
    HERO_ELEMENT_WOOD  = 2;
    HERO_ELEMENT_WATER = 3;
    HERO_ELEMENT_FIRE  = 4;
    HERO_ELEMENT_EARTH = 5;
    HERO_ELEMENT_RESERVED_1 = 6;
    HERO_ELEMENT_RESERVED_2 = 7;
}

// 角色摘要
message RoleBrief
{
    optional uint32     id          = 1;
    optional string     name        = 2;
    optional uint32     base_id     = 3;
    optional uint32     transform   = 4;
    optional string     group_name  = 5;
    optional sint32     lev         = 11;
    optional sint64     exp         = 12;
    optional uint32     title       = 13;
    optional Numeric    numeric     = 31;   // 数值
    optional sint32     exam_score  = 32;
    optional sint32             climb_tower_layers = 33;
    optional Common.HeroClothes hero_clothes       = 34; // 当前时装
    optional Common.HeroInfo    hero_info          = 35; // 当前英雄信息
    optional sfixed64           running_race_speed = 36; // 人气赛跑速度
    optional sint64             group_battle_score = 37; // 社团战积分
    optional sint64             group_hegemony_score = 38; // 社团争霸积分
}

// 角色信息
message RoleInfo
{
    // 基础数值
    optional uint32     id          = 1;
    optional string     name        = 2;
    optional uint32     base_id     = 3;
    optional uint32     transform   = 4;

    optional sint32     lev         = 11;
    optional sint64     exp         = 12;
    //optional sint32     coin        = 13; // 废弃32位字段
    //optional sint32     gold        = 14; // 废弃32位字段
    optional sint32     vip_exp     = 15; // VIP经验
    optional sint32     vip_lev     = 16; // VIP等级
    optional sint64     fame        = 17; // 声望
    optional sint64     coin        = 18; // 金币
    optional sint64     gold        = 19; // 钻石
    optional uint32     title       = 20; // 称号
    optional sint64     score       = 21; // 积分
    
    optional Numeric    numeric           = 31; // 数值
    optional Pack       equip_pack        = 32; // 装备背包
    optional Mission 	mission_main      = 33; // 主线任务
    optional RoleSkill  skill             = 34; // 已学技能
    optional RoleSP     sp                = 35; // 体力
    optional uint32     fc_rank           = 36; // 战斗力排名
    optional Pack       degree_equip_pack = 37; // 学霸装备
    optional Numeric    pure_numeric      = 38; // 不含英雄效果的数值
    repeated Effect     effect_scale_list = 39; // 比例加成效果
    
    repeated HeroInfo       hero_list       = 42; // 解锁的英雄列表 
    optional HeroClothes    hero_clothes    = 43; // 当前时装
    
    optional PetBrief       pet_brief       = 44; // 宠物
    optional FellowInfo     fellow          = 45; // 助阵
    repeated ConstellationEntry constellation_list = 46; // 星盘
    optional sint32         constellation_lev      = 47; // 星盘等级

    optional Common.SuperEquipment   super_equipment  = 48; // 圣装

    optional string group_name  = 50;	// 社团名字
    optional string platform    = 51;   // 平台名

}

// 角色信息(Web请求返回，供游戏后台查询展示)
message RoleInfo2
{
    optional uint32 id     = 1;
    optional string name   = 2;
    optional sint32 career = 3;

    // 属性
    optional sint64 fame                = 10;    // 声望
    optional sint64 cumulative_fame     = 11;    // 累计声望
    optional sint32 cumulative_recharge = 12;    // 累计充值
    optional sint32 recharge_count      = 13;    // 充值次数
    optional sint32 nature_sp           = 14;    // 自然体力
    optional sint32 extra_sp            = 15;    // 额外体力
    optional sint32 sp_buy_count        = 16;    // 当日体力购买次数
    
    // 状态
    optional sfixed64 cumulative_online_time    = 20; // 累积在线时长
    optional sint32   daily_mission_reset_count = 21; // 每日任务重置次数

    // 其他
    optional Numeric   numeric    = 30; // 战斗数值
    optional Pack      item_pack  = 31; // 背包
    optional Pack      equip_pack = 32; // 装备
    optional RoleSkill skill      = 33; // 技能
}

// 角色战斗力
message FightingCap
{
    optional sint64 attr  = 1;  // 属性战斗力
    optional sint64 skill = 2;  // 技能战斗力
    //optional sint64 hero  = 3;  // 解锁英雄英雄个数
    optional sint64 pet   = 4;  // 宠物战斗力
    // optional sint64 hero_lev_fc = 5; // 英雄升级战斗力加成
    optional sint64 constellation_fc    = 6;  // 星盘战斗力
    optional sint64 super_equipment_fc  = 7;  // 圣装战力
}

// 角色数值
message Numeric
{
    optional sint64 max_hp  = 1;    // max hp

    optional sint64 catk    = 2;    // 普通攻击(common attack)
    optional sint64 cdef    = 3;    // 普通防御(common defence)

    optional sint64 satk    = 4;    // 技能攻击(skill attack)
    optional sint64 sdef    = 5;    // 技能防御(skill defence)

    optional sint64 crit    = 6;    // 暴击(crit)
    optional sint64 decrit  = 7;    // 韧性(decrit)

    optional sint64 inchurt = 8;    // 暴击伤害(increase crit hurt)

    optional sint64 inhurt  = 9;    // 破甲伤害(increase hurt)
    optional sint64 dehurt  = 10;   // 减免伤害(decrease hurt)

    optional sint64 force   = 11;   // 武力(force)
    optional sint64 intel   = 12;   // 智力(intelligence)

    optional FightingCap fc = 13;   // 战斗力(fighting capacity)
    optional sint64 hero_fc = 14;   // 英雄总战斗力
    optional sint64 group_battle_fc  = 15;  // 社团战战斗力
}

// 签到奖励结构
message SignAward
{
    repeated GameRes award_list = 1;
    optional sint32  vip_lev    = 2;
    optional sint32  multiple   = 3;
    optional bool    awarded    = 4[default =  false];
}

// 英雄羁绊(小伙伴)
message FellowInfo
{
    message Cell
    {
        optional sint32 idx     = 1;
        optional uint32 hero_id = 2;
    }
    repeated Cell cell_list = 1;
}

// 英雄组合
message HeroCombination
{
    optional uint32 id          = 1;
    optional sint32 lev         = 2[default = 1];
}

// 武道会消息
message TournamentMsg
{
    enum Type
    {
        TYPE_OCCUPY     = 1; //我挑战
        TYPE_OCCUPIED   = 2; //我被挑战
    }
    optional Type       type        = 1;
    optional sfixed64   timestamp   = 2;
    optional string     oppo_name   = 3;
    optional sint32     old_rank    = 4; //该事件中我的旧排名
    optional sint32     new_rank    = 5; //该事件中我的新排名
    optional bool       win         = 6;
    optional sint32     fight_rank  = 7; // 被挑战人的排名
}

// 玩家关系
enum RoleRelationType
{
    RELATION_TYPE_NULL     = 1;
    RELATION_TYPE_FRIEND   = 2;
    RELATION_TYPE_GROUP    = 3;
    RELATION_TYPE_RESERVED_1 = 4;
    RELATION_TYPE_RESERVED_2 = 5;
}
