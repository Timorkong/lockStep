// 玩家存档

import "common_role.proto";
import "common_mission.proto";
import "common_pack_item.proto";
import "common_skill.proto";
import "common_sp.proto";
import "common_activity.proto";
import "common_game_res.proto";
import "common_territory.proto";
import "common_dm_message.proto";
import "common_rank_table.proto";
import "common_notification.proto";
import "common_pvp.proto";
import "common_award.proto";
import "common_clothes.proto";
import "common_shop.proto";
import "common_operation.proto";
import "common_open_server.proto";
import "common_effect.proto";
import "common_street_war.proto";
import "common_title.proto";
import "common_inner_activity.proto";
import "common_pet.proto";
import "common_growup.proto";
import "common_group.proto";
import "common_turntable.proto";
import "common_limited_challenge.proto";
import "common_limited_mission.proto";
import "common_pk.proto";
import "common_mail.proto";
import "common_trial.proto";
import "common_week_challenges.proto";
import "common_super_equipment.proto";
import "common_school_turntable.proto";
import "common_multiple_item.proto";
import "archive_time.proto";

package Archive;

// 角色基本存档
message Role
{
    // 基本属性
    optional uint32 id          = 1;
    optional string name        = 2;
    optional sint32 career      = 3;
    optional uint32 sid         = 4;
    optional uint32 uid         = 5;

    optional sint64 exp         = 20;
    optional sint32 lev         = 21 [default = 1];
    optional sint64 coin        = 22;
    optional sint64 gold        = 23;
    optional sint32 vip_exp     = 24;
    optional sint32 vip_lev     = 25;
    
    // 数据集合0-7(8)，最活跃数据，数据集合字段不能超过【2个】
    // 逻辑上来讲，这部分应该是玩家基础档案，任何操作都有可能改变此数据
    message DataSet0
    {
        optional Property               property            = 1;    // 属性
        optional Basic                  basic               = 2;    // 基础信息
    }
    message DataSet1
    {
        optional State                  state               = 1;    // 状态
    }
    message DataSet2
    {
        optional Common.Numeric         numeric             = 1;    // 战斗数值
        optional Common.Numeric         pure_numeric        = 2;    // 纯净数值(不含英雄效果)
    }
    message DataSet3
    {
        optional Common.Pack            item_pack           = 1;    // 背包
    }
    message DataSet4
    {
        optional History                history             = 1;    // 历史记录
    }
    message DataSet5
    {
        optional EffectScale            effect_scale        = 1;    // 数值效果加成比例
    }
    message DataSet6
    {
    }
    message DataSet7
    {
    }
    // 数据集合8-23(16)，次活跃数据，数据集合字段不能超过【4个】
    // 逻辑上来讲，这部分应该是核心功能数据，用户有最强烈的欲望操作此数据
    message DataSet8
    {
        optional Common.Pack                equip_pack           = 1;    // 装备
        optional Common.SuperEquipment      super_equipment      = 2;    // 圣装
    }
    message DataSet9
    {
        optional Common.RoleSkill       skill               = 1;    // 技能
    }
    message DataSet10
    {
        optional Mission                mission             = 1;    // 任务
        optional Growup                 growup              = 2;    // 成长之路
    }
    message DataSet11
    {
        optional Collection             collection          = 1;    // 收集
    }
    message DataSet12
    {
        optional Hero                   hero                = 1;    // 英雄
    }
    message DataSet13
    {
        optional Common.Activity        activity            = 1;    // 活跃度
    }
    message DataSet14
    {
        optional Common.DailyMission    daily_mission       = 2;    // 每日任务
    }
    message DataSet15
    {
        optional Arena                  arena               = 1;    // 竞技场
        optional Title                  title               = 2;    // 称号
    }
    message DataSet16
    {
        optional Common.PVPSystem       pvp_system          = 1;    // PVP
        optional PKSystem               pk_system           = 2;    // 王者争霸
        optional PKChallenge            pk_challenge        = 3;    // PK挑战
    }
    message DataSet17
    {
        optional Common.LotteryShop     lottery_shop        = 1;    // 抽卡
        optional Lottery                lottery             = 2;
        
        optional Giftbag                giftbag             = 10;   // 礼包
    }
    message DataSet18
    {
        optional Common.Pack            degree_equip_pack   = 1;    // 学霸系统
        optional Common.Pack            degree_item_pack    = 2;
    }
    message DataSet19
    {
        optional Common.ClothesSys      clothes_sys         = 1; // 时装系统
        optional Common.MagicRefine     magic_refine        = 2; // 附魔修炼
    }
    message DataSet20
    {
        optional LotteryDragon          lottery_dragon      = 1; // 神龙抽奖
        optional LotterySchool          lottery_school      = 2; // 书店抽奖
        optional Turntable              turntable           = 3; // 转盘
    }
    message DataSet21
    {
        optional PetInfo                pet_info            = 1;  // 宠物
    }
    message DataSet22
    {
    }
    message DataSet23
    {
    }
    // 数据集合24-31(8)，不活跃数据，数据集合字段不能超过【8个】
    // 逻辑上来讲此部分应该是活动或者临时数据，玩家没欲望或不可能频繁操作
    message DataSet24
    {
        optional DailyLogin             daily_login         = 1;    // 登录奖励
        optional OnlineAward            online_award        = 2;    // 在线奖励
        optional LevAward               lev_award           = 3;    // 等级奖励
        optional DailySign              daily_sign          = 4;    // 30天签到
        optional StarAward              star_award          = 5;    // 星级奖励
        optional GoldInvest             gold_invest         = 6;    // 理财计划
        optional Common.WeekAward       week_award          = 7;    // 七日奖励
        optional Common.VipDailyAward   vip_daily_award     = 8;    // vip每日奖励
    }
    message DataSet25
    {
        optional MockExam               mock_exam           = 1;    // 模拟考试
        optional Common.MeatBunAward    meat_bun_award      = 2;    // 美味包子奖励
        optional Common.VipWeekAward    vip_week_award      = 3;    // vip每周礼包
        optional RecallPlayer           recall_player       = 4;    // 老玩家召回活动
    }
    message DataSet26
    {
        optional SandbagsWar            sandbags_war        = 1;    // 沙包大战
        optional RunningRace            running_race        = 2;    // 人气赛跑
        optional Common.ShareAward      share_award         = 3;    // 分享奖励
    }
    message DataSet27
    {
        optional ClimbTower             climb_tower         = 1;    // 爬塔
        optional LeaseHero              lease_hero          = 2;    // 租借英雄
        optional GroupMission           group_mission       = 3;    // 社团任务
        optional GroupInstance          group_instance      = 4;    // 社团副本
    }
    message DataSet28
    {
        optional DM                     dm                  = 1;    // 弹幕
        optional Festival               festival            = 2;    // 节日活动
        optional Recoup                 recoup              = 3;    // 补偿
        optional Version                version             = 4;    // 版本
        optional AnchorVote             anchor_vote         = 5;    // 主播投票
        // optional MultipleItemList       multiple_item_list  = 6;    // 加倍道具
    }
    message DataSet29
    {
        optional StreetWar              street_war          = 1;    // 街头争霸 
        optional Trial                  trial               = 2;    // 组队试炼
    }
    message DataSet30
    {
        optional Common.FellowInfo      fellow              = 1;    // 羁绊
        optional Combination            combination         = 2;    // 英雄组合
        optional Constellation          constellation       = 3;    // 觉醒星盘
    }
    message DataSet31
    {
        optional Operation                operation         = 1; // 运营活动
        optional Common.OpenServerEvent   open_server_event = 2; // 开服活动
        optional InnerActivity            inner_activity    = 3; // 内置活动列表
        optional Common.LimitedChallenge  limited_challenge = 4; // 限时挑战
        optional LimitedMission           limited_mission   = 5; // 限时任务

        optional Common.WeekChallengeTaskList week_challenge    = 6; // 每周任务
    }
    
    optional DataSet0   rds0    = 50;
    optional DataSet1   rds1    = 51;
    optional DataSet2   rds2    = 52;
    optional DataSet3   rds3    = 53;
    optional DataSet4   rds4    = 54;
    optional DataSet5   rds5    = 55;
    optional DataSet6   rds6    = 56;
    optional DataSet7   rds7    = 57;
    optional DataSet8   rds8    = 58;
    optional DataSet9   rds9    = 59;
    optional DataSet10  rds10   = 60;
    optional DataSet11  rds11   = 61;
    optional DataSet12  rds12   = 62;
    optional DataSet13  rds13   = 63;
    optional DataSet14  rds14   = 64;
    optional DataSet15  rds15   = 65;
    optional DataSet16  rds16   = 66;
    optional DataSet17  rds17   = 67;
    optional DataSet18  rds18   = 68;
    optional DataSet19  rds19   = 69;
    optional DataSet20  rds20   = 70;
    optional DataSet21  rds21   = 71;
    optional DataSet22  rds22   = 72;
    optional DataSet23  rds23   = 73;
    optional DataSet24  rds24   = 74;
    optional DataSet25  rds25   = 75;
    optional DataSet26  rds26   = 76;
    optional DataSet27  rds27   = 77;
    optional DataSet28  rds28   = 78;
    optional DataSet29  rds29   = 79;
    optional DataSet30  rds30   = 80;
    optional DataSet31  rds31   = 81;

    message Basic
    {
        optional string platform    = 1;    // 用户所属平台
    }

    // Property和State的区别：
    // Property 理解成角色的重要属性，属于玩家重要操作
    // State    理解成角色的非重要属性，非重要操作或控制变量
    message Property
    {
        optional sint64             fame                     = 1;    // 声望
        optional sint64             cumulative_fame          = 2;    // 累计声望
        optional sint32             cumulative_recharge      = 3;    // 累计充值
        optional sint32             recharge_count           = 4;    // 充值次数
        repeated uint32             recharge_awarded_list    = 5;    // 已领取的充值奖励列表
        optional Common.RoleSP      sp                       = 6;    // 体力值
        repeated DelayedRecharge    delayed_recharge_list    = 7;    // 延迟充值发货
        repeated FirstRechargeAward first_recharge_award_list = 8;   // 首充领奖列表
        repeated uint32             daily_recharge_awarded_list = 9;    // 已领取的充值奖励列表
        optional sint64             score                     = 10; // 积分
        optional sint64             daily_recharge_count     = 11;   // 今日充值数
        
        message DelayedRecharge
        {
            optional uint32     id          = 4;
            optional sint32     days_left   = 5;
            optional sfixed64   timestamp   = 6;
        }
        
        message FirstRechargeAward
        {
            optional uint32 id           = 1;
            optional bool   awarded_flag = 2;
        }
    }

    message State
    {
        optional uint32     scene_id                = 1;  // 静态场景
        optional Instance   instance                = 2;  // 副本状态

        // login_timestamp 和 logic_login_timestamp 的区别
        // login_timestamp 是角色实际的登录的时间，断线重连也会更新。[Offline]
        // logic_login_timestamp 断线重连不会更新，只有Zone踢下线才会更新。[Logout]
        optional sfixed64   login_timestamp         = 11; // 登录时间戳
        optional sfixed64   cumulative_online_time  = 12; // 累积在线时长
        optional sfixed64   last_levup_timestamp    = 13; // 上一次升级时间戳
        optional sfixed64   logic_login_timestamp   = 14; // 逻辑登录时间戳
        optional sfixed64   login_notice_timestamp  = 15; // 上线通知时间戳
        optional sfixed64   day_cumulative_online_time = 16; // 当天累计上线时长

        optional sint32     printing_press_used     = 21; // 印钞机已使用次数
        optional sfixed64   bulletin_timestamp      = 22; // 公告栏时间戳
        optional sint32     revive_used_count       = 23; // 已使用的复活次数    
        optional sint32 daily_mission_reset_count   = 24; // 每日任务重置次数
        optional bool       chess_room_awarded      = 25[default = false]; // 是否领取棋牌室每日收入
        //optional sint32     group_build_count       = 26; // 参与建筑升级次数
        optional bool       bun_room_awarded        = 27[default = false]; // 是否领取包子铺每日收入
        repeated sint32     already_builded_list    = 28;  // 参与过的建筑列表
        optional TeamPVE    daily_team_pve          = 30;   // 组队PVE

        optional Time  zero_clock_time              = 31;  // 0 点定时器存档
        optional Time  twelve_clock_time            = 32;  // 12 点定时器存档
        optional Time  eighteen_clock_time          = 33;  // 18 点定时器存档  
        optional Time  tower_clock_time             = 34;  // 爬塔定时器存档  
        optional Time  twentyone_clock_time         = 35;  // 21 点定时器存档  

        optional sfixed64   tournament_timestamp    = 36;   // 武道场时间戳
        
        optional Time  send_score_clock_time        = 37;  // 积分定时器  

        optional Time monday_clock_time             = 38;  // 每周一零点定时器
        
        optional Time  five_clock_time              = 39;  // 5 点定时器存档
       
        message Instance
        {
            optional uint32 id          = 1;    // 副本场景ID
            optional uint32 guid        = 2;    // 副本场景唯一ID
            optional bool   has_awarded = 3;    // 副本已奖励，防止重复领奖
            optional uint32 team_pve_id = 4;    // 组队PVE ID
            //optional uint32 trial_id    = 5;    // 试炼副本
        }

        message TeamPVE
        {
            optional sint32 easy_count = 1;   // 简单模式参加次数
            optional sint32 hard_count = 2;   // 困难模式参加次数
        }
    }

    message EffectScale
    {
        repeated Common.Effect effect_scale_list = 1;
    }

    message Mission
    {
        repeated Common.Mission list = 1;
    }

    message Growup
    {
        repeated Common.GrowupInfo list = 1;
    }

    message History
    {
        repeated PassedInstance passed_instance_list        = 1;    // 已通关副本
        repeated uint32         passed_hero_instance_list   = 2;    // 当天通过的精英、魔王、深渊关卡
        repeated PassedInstance passed_elite_list           = 3;    // 通过的所有精英关卡
        repeated PassedInstance passed_devil_list           = 4;    // 通过的所有魔王关卡
        repeated PassedInstance passed_abrss_list           = 5;    // 通过的所有深渊关卡
        repeated ResetInstanceInfo reset_instance_info_list = 6;    // 重置副本记录
        repeated Recharge       recharge_list               = 10;   // 充值记录
        repeated Expend         expend_list                 = 11;   // 消费记录
        
        optional sint32         max_combo                   = 12;   // 最高连击
        optional sint32         printing_press_count        = 13;   // 累计印钞
        optional sint32         magic_refine_count          = 14;   // 附魔次数
        optional sint32         buy_magic_refine_count      = 15;   // 加速次数
        optional sint32         sandbags_war_count          = 16;   // 沙包次数
        optional sint32         hero_transfer_count         = 17;   // 传承次数
        optional sint32         arena_failed_count          = 18;   // 竞技失败
        optional sint32         arena_win_count             = 19;   // 获胜次数
        optional sint32         revive_count                = 20;   // 复活次数

        optional bool           reissue_recharge_award      = 21[default = true];   // 补发充值奖励
        
        optional sint32         group_instance_count        = 22;   // 社团副本
        optional sint32         group_mission_count         = 23;   // 社团任务
        optional sint32         meat_bun_gold               = 24;   // 美味包子累计领取钻石
        optional sint32         help_defend_stall_count     = 25;   // 护卫地盘
        optional sint32         occupy_stall_count          = 26;   // 摆摊次数
        optional sint32         help_rob_stall_count        = 27;   // 摆摊次数
        repeated InstanceOutputInfo  prob_output_instance_list = 30;   // 每日副本产出信息

        message ResetInstanceInfo
        {
            optional uint32 id      = 1;
            optional sint32 count   = 2;
        }
        message PassedInstance
        {
            optional uint32 id          = 1;
            optional sint32 evaluation  = 2;
        }
        message Recharge
        {
            optional uint32 id          = 1;
            //optional sint32 count       = 2;
            optional sfixed64 timestamp = 3;
        }
        message Expend
        {
            optional sfixed64   timestamp   = 1;
            optional sint64     coin        = 4;
            optional sint64     gold        = 5;
        }
        message InstanceOutputInfo
        {
            optional uint32 id      = 1;
            optional sint32 count   = 2; // 产出次数
        }
    }

    message Hero
    {
        optional uint32             transform           = 1;    // 变身状态
        optional sfixed64           cd_timestamp        = 2;    // 变身CD
        //optional sfixed64           transform_timestamp = 3;    // 变身时间戳
        repeated Common.HeroInfo    unlocked_list       = 4;    // 已解锁英雄
        optional sfixed64           transform_timestamp = 5;    // 变身时间戳
        //optional bool               reset_hero_exp      = 6[default = true]; // 是否重置经验
        optional bool               reset_hero_exp      = 7[default = true]; // 是否重置经验
    }

    message Combination
    {
        repeated uint32                 active_list = 1; // 激活列表(旧存档)
        repeated Common.HeroCombination unlock_list = 2; // 激活列表
        optional bool                   reset       = 3[default = true];
    }

    message Constellation
    {
        repeated Common.ConstellationEntry constellation_entry_list = 1;
        optional sint32 lev = 2;
        optional sint32 fail_count = 3;
    }
    
    message Operation
    {
        message Operation
        {
            optional uint32 id          = 1;
            optional sint64 curr_amount = 2;

            message Entry
            {
                optional uint32                 id      = 1;
                optional Common.OperationState  state   = 2;
                optional sint32         awarded_count   = 3;    // 已领奖次数
            }
            repeated Entry entry_list = 15;
        }
        repeated Operation list  = 1;
    }

    message Festival
    {
        optional uint32 id          = 1;
        repeated uint32 signed_days = 2;
        optional uint32 login_days  = 3;
    }

    message Collection
    {
        repeated Common.Collection      list        = 1; // 收集层级记录
        optional Common.CollectionShop  shop        = 2; // 地下商店
        optional Common.ArenaShop       arena_shop  = 3; // 竞技商店
        optional Common.StreetShop      street_shop = 4; // 街霸商店
        optional Common.DegreeShop      degree_shop = 5; // 学霸商店
        optional Common.TournamentShop  tour_shop   = 6; // 武道会商店
        
        repeated sint32 lev_shop_goods_list = 7; // 等级商店购买列表

        optional Common.TerritoryShop       terr_shop             = 8; // 地盘商店
        optional Common.SchoolTreasureShop  school_treasure_shop  = 9; // 校园宝藏抽奖商店
        optional Common.SchoolTurntableShop school_turntable_shop = 10; // 学霸转盘活动
        optional Common.GroupHegemonyShop   group_hegemony_shop   = 11; // 社团争霸商店    
        optional Common.DivineSoulShop      divine_soul_shop      = 12; // 圣魂商店
        optional Common.GodAwardShop        god_award_shop        = 13; // 天降珍宝
    }
    
    message Arena
    {
        optional sint32     challenged_count        = 1;    // 当日挑战次数
        optional sfixed64   cd_timestamp            = 2;    // 冷却到期时间戳
        optional sint32     clear_cd_count          = 3;    // 当日清除CD次数
        optional bool       reset_challenged        = 4 [default = false]; // 判断今天是否重置过挑战
        // 记录最后一次FillArenaInfo随机出来的对手列表用于战斗检查
        repeated uint32     competitor_rank_list    = 11;
    }
    
    message DailyLogin
    {
        optional bool   has_logined         = 1 [default = false];
        optional sint32 login_days          = 2; // 累计登陆天数
        //repeated sint32 awarded_list      = 3; // 已领取的每日登陆列表
        repeated sint32 awarded_list        = 5; // 已领取的每日登陆列表
        optional bool   has_signed          = 6 [default = false];
        optional sint32 sign_days           = 7; // 累计签到天数

        // 连续登陆天数存档
        optional sint32 last_login_dt        = 10; // 上次登录日期(转换今年的第几天存储)
        optional sint32 continous_login_days = 11; // 连续登陆天数
    }

    // 30天签到，和登陆的签到不是同一个
    message DailySign
    {
        //optional bool   has_signed          = 1 [default = false];
        optional sint32 sign_days           = 2; // 累计签到天数
        optional sint32 last_sign_month     = 3; // 上次签到月份
        optional sint32 last_sign_year      = 4; // 上次签到年份
        repeated sint32 awarded_list        = 5; // 已领的列表
        repeated sint32 cumulative_sign_awarded_list = 6; // 累计签到奖励已领列表
        optional bool   has_signed          = 7 [default = false];
    }
    
    // 老玩家召回活动
    message RecallPlayer
    {
        optional bool       isoldplayer           = 1 [default = false]; 
        optional sint32     login_days            = 2; // 累计登陆天数
        optional sfixed64   first_login_timestamp = 3;
        repeated sint32     login_awarded_list    = 4; // 登录奖励已领列表
    }
    
    message OnlineAward
    {
        optional bool       unlock      = 1 [default = false]; // 是否已解锁
        optional sint32     id          = 2;
        optional sfixed64   start_time  = 3; // 开始计时时间
        optional sint32     countdown   = 4;
    }

    message LevAward
    {
        // 已经不在使用的字段(1~3), 但是为了线上存档兼容，需要保留
        optional bool                   close_flag       = 1; // 结束标记
        optional int32                  next_lev         = 2; // 下一次领奖等级
        repeated Common.LevAwardState   lev_award_list   = 3; // 奖励列表

        // 新的字段开始(5~)
        optional sint32 awarded_lev = 5;
    }
    
    message StarAward
    {
        repeated sint32 normal_awarded_list = 1;
        repeated sint32 elite_awarded_list = 2;
        repeated sint32 devil_awarded_list = 3;
    }

    message MockExam
    {
        optional Common.MockExamState state     = 1 [default = MOCK_EXAM_NOTSTART];
        repeated uint32     problem_list        = 2; // 随机出的题目列表
        optional sint32     problem_index       = 3; // 当前在回答的题目索引
        repeated uint32     option_list         = 4; // 当前题目的选项列表(随机后)
        optional bool       problem_started     = 5 [default = false]; //题目答题状态 
        optional sfixed64   problem_start_time  = 6; //本题开始时间
        optional bool       awarded             = 7 [default = false];
    }

    message SandbagsWar
    {
        optional bool       ongoing         = 1[default = false];   // 本次是否处于进行中
        optional sint32     used_count      = 2;                    // 使用次数
        optional sfixed64   cd_timestamp    = 3[default = 0];       // 用于计算cd的时间戳
    }

    message RunningRace
    {
        optional bool       ongoing         = 1[default = false];   // 是否在进行中
        optional sint32     used_count      = 2;                    // 已使用次数
        optional sint32     buy_count       = 3;                    // 购买次数
    }

    message ClimbTower
    {
        optional bool                   on_fighting         = 1[default = false]; // 打副本中
        repeated Common.ClimbTowerHero  hero_list           = 2;
        //repeated uint32                 used_hero_list  = 3; // 已上阵的英雄
        optional sint32                 climb_count         = 4;
        repeated uint32                 used_hero_idx_list  = 5;  // 已上阵的英雄
        optional sfixed64               into_timestamp      = 6; // 进入时间
    }

    message DM
    {
        repeated Common.DmUsedInfo  use_list = 1;
    }

    // 抽奖
    message Lottery
    {
        //optional bool     first = 1[default = true]; // 是否第一次抽
        optional sfixed64 tea_egg_timestamp  = 2;
        optional sfixed64 gold_egg_timestamp = 3;
        optional sint32   used_free_count    = 4;
        optional sint32   count              = 5; // 抽奖次数
        optional bool     first_10_lottery   = 6[default = true]; // 是否第一次10连抽
        //optional bool     second             = 7[default = true]; // 第二次抽还没用
        optional sint32   cake_count         = 8; // 切糕抽奖次数
        //optional uint32   school_count       = 9; // 校园庆典抽奖次数
        optional sint32   hero_2star_count   = 10; // 抽2星英雄累计次数
        optional sint32   hero_3star_count   = 11; // 抽3星英雄累计次数
        optional sint32   hero_2star_award_count = 12; // 抽中2星英雄次数
        optional sint32   hero_3star_award_count = 13; // 抽中3星英雄次数

        optional sint32   buy_special_goods_count = 14;
        optional sfixed64 cake_timestamp          = 15;

    }
    
    // 神龙抽奖
    message LotteryDragon
    {
        optional Common.DragonBall      dragon_ball               = 1;
        repeated Common.DragonAward     award_list                = 2;
        repeated Common.DragonAward     ball_award_list           = 3;
        optional sint32                 lucky_dragon_count        = 4; // 幸运神龙抽奖次数
    }

    // 女仆书店
    message LotterySchool
    {
        optional sint32         count        = 1;
        optional sint32         normal_count = 2; 
        optional sint32         super_count  = 3; 
        optional sint32         gold_count   = 4; 
    }
    
    // 租借英雄
    message LeaseInfo
    {
        optional uint64          guid       = 1;
        optional uint32          hero_id    = 2;
        optional uint32          owner_id   = 3;
        optional sfixed64        lease_time = 4;
    }

    message LeaseHero
    {
        repeated LeaseInfo            lease_list = 1; // 已弃用
        repeated Common.LeaseHeroInfo hero_list  = 2;
    }

    // 街头争霸
    message StreetWar
    {
        optional uint32             street_id               = 3;  // 街头争霸关卡id
        optional sint32             street_challenge_count  = 4;  // 街头争霸挑战次数
        //repeated Common.RoleInfo    competitor_info_list    = 5;  // 一次选出所有对手
        optional uint32             buy_challenge_count     = 6;  // 购买了几次街头争霸挑战
        optional sint64             history_max_fc          = 7;  // 历史最高战斗力 
        optional Common.Numeric     history_numeric         = 8;
        optional Common.StreetWarRole competitor_info       = 9;
        optional sint32             manual_refresh_count    = 10; // 手动刷新的次数
    }

    // 礼包
    message Giftbag
    {
        // 每日礼包(普通)
        optional int32 normal_gift_id = 1;
        optional bool  buy_flag       = 2;
        // 每日礼包(vip)
        repeated int32 vip_lev_list   = 10;
    }

    // 钻石投资(理财计划)
    message GoldInvest
    {
        optional bool  purchased        = 1 [default = false];
        repeated int32 awarded_lev_list = 2;
        repeated int32 awarded_full_award_list = 3; // 领取全服奖励列表
    }

    // 称号
    message Title
    {
        optional uint32       curr_title = 1;  
        repeated Common.Title title_list = 2;
    }

    message InnerActivity
    {
        optional sint32 activity_id = 1; // 活动ID
        repeated Common.InnerActivity ia_list = 2; // 活动列表
        optional sfixed64 start_timestamp = 3; // 活动开启时间
        optional sint32   duration_days   = 4; // 总持续时间
    }

    // 限时任务
    message LimitedMission
    {
        optional sint32 id = 1; // 限时任务ID
        repeated Common.LimitedMission mission_list = 2; // 任务列表
    }
    
    // 转盘
    message Turntable
    {
        repeated Common.TurntableCell cell_list  = 1;
        optional sint32               use_count  = 2;
        //optional sint64               score      = 3;
        optional sint64               cost_sum   = 4;
    }

    // 王者争霸
    message PKSystem
    {
        optional sint32 streaking_count = 1; // 连胜次数
        optional sint32 daily_count     = 2; // 参与次数
        // 每日奖励
        message DailyAward
        {
            //optional sfixed64   timestamp   = 1;
            optional sint32     progress    = 2;
            optional bool       awarded     = 3;
        }
        optional DailyAward daily_award     = 14;
    }

    // 跨服PK挑战
    message PKChallenge
    {
        optional Common.PKChallengeSettings settings    = 1;

        optional bool                       flag        = 15;   // PK挑战状态
    }

    // 宠物
    message PetInfo
    {
        repeated Common.Pet           pet_list   = 1;
        optional uint32               main_pet   = 2;
        optional Common.AssistPet     assist_pet = 3;
        optional Common.PetNumeric    pet_numeric  = 4;
        repeated Common.PetMission    mission_list = 5;
        optional Common.HatchCenter   hatch_center = 6;
    }
    
    // 社团任务
    message GroupMission
    {
        optional sint32               mission_count       = 1;
        optional sint32               mission_reset_count = 2;
        repeated Common.GroupMission  mission_list        = 3;
        optional sint32               buy_mission_count   = 4; // 已购买的次数
        optional sint32               extra_mission_count = 5; // 额外次数
    }

    message GroupInstance
    {
        optional sint32 use_count   = 1;   
        optional uint32 instance_id = 2;   
        optional uint32 boss_id     = 3;   
    }

    message Recoup
    {
        optional bool artifact_recoup = 1[default = true]; 
        optional bool vip_recoup      = 2[default = true]; 
        optional bool artifact_advance_recoup = 3[default = true];
    }
    
    message Trial
    {
        optional sint32 used_count = 1;
        optional sint32 buy_count  = 2;
        repeated Common.TrialInvite     invite_list   = 3; 
        repeated Common.TrialRecourse   recourse_list = 4; 
        repeated Common.TrialRecord     record_list   = 5;
        repeated Common.GameRes         award_list    = 6;
        //repeated TrialRes               screen_award  = 7;
        repeated Common.GameRes         king_award_list = 8;
        optional sint32                 overflow_count  = 9;
        repeated Common.TrialRes        screen_award  = 10;
        optional uint32                 instance_id   = 11;
        optional bool                   instance_awarded = 12[default = false];
    }

    message Version
    {
        optional string version      = 1;
        optional bool   updated      = 2[default = false];
        repeated uint32 awarded_list = 3;
    }
    
    message FansScore
    {
        optional uint32 anchor_id = 1;
        optional sint64 score     = 2;
    }

    message AnchorVote
    {
        //optional sint64 fans_score     = 1;
        repeated uint32 awarded_list   = 2;
        optional uint32 praised_anchor = 3;
        optional uint32 schedule_id    = 4;
        repeated FansScore fans_score_list = 5;
    }

}

// 角色幽灵存档
message Ghost
{
    message DataSet0
    {
        // 这个要保持独立，更改太频繁了
        optional Common.RoleInfo    role_info       = 1;
    }
    message DataSet1
    {
        optional Relation           relation        = 1;
        optional LeaseInfo          lease_info      = 2;
    }
    message DataSet2
    {
        optional RobInfo            rob_info        = 1;
    }
    message DataSet3
    {
        optional ExamInfo           exam_info       = 1;
        optional ClimbTowerInfo     climb_tower     = 2;
        optional WorldBossInfo      world_boss      = 3;
        optional RunningRace        running_race    = 4;
    }
    message DataSet4
    {
        optional Common.Territory   territory       = 1;
    }
    message DataSet5
    {
        optional MsgNotification    msg_notice      = 1;
        optional SeasonAward        season_award    = 2;
        optional Mail               mail            = 3;
    }
    message DataSet6
    {
        optional State  state   = 1;
        optional Basic  basic   = 2;
    }
    message DataSet7
    {
        optional Tournament tournament  = 1;
    }
    message DataSet8
    {
        optional History history = 1;
        optional Title   title   = 2;
    }
    message DataSet9
    {
        optional Lottery lottery = 1;
    }
    message DataSet10
    {
        optional GroupRecord   group_record   = 1;
        optional GroupWelfare  group_welfare  = 2;
        optional GroupHegemony group_hegemony = 3;
    }
    message DataSet11
    {
        optional Common.Stall territory_stall = 1;
    }
    message DataSet12
    {
        optional GroupBattle  group_battle = 1;
    }
    message DataSet13
    {
        optional MultipleItemList multiple_item_list = 1;
    }
    message DataSet14
    {
    }
    message DataSet15
    {
    }

    optional DataSet0   gds0    = 50;
    optional DataSet1   gds1    = 51;
    optional DataSet2   gds2    = 52;
    optional DataSet3   gds3    = 53;
    optional DataSet4   gds4    = 54;
    optional DataSet5   gds5    = 55;
    optional DataSet6   gds6    = 56;
    optional DataSet7   gds7    = 57;
    optional DataSet8   gds8    = 58;
    optional DataSet9   gds9    = 59;
    optional DataSet10  gds10   = 60;
    optional DataSet11  gds11   = 61;
    optional DataSet12  gds12   = 62;
    optional DataSet13  gds13   = 63;
    optional DataSet14  gds14   = 64;
    optional DataSet15  gds15   = 65;

    // 好友基本信息
    message FriendInfo
    {
        optional uint32 id         = 1;                   // 好友ID
        // optional bool   has_momoed = 2 [default = false]; // 好友是否已经被么过
    }
    
    // 社团加入历史
    message GroupHistory
    {
        optional uint32   group_id       = 1;
        optional sfixed64 join_timestamp = 2;
    }

    // 社会关系
    message Relation
    {
        repeated uint32     enemy_list   = 2;  // 对手列表
        repeated FriendInfo friend_list  = 3;  // 好友列表
        
        optional int32  momo_count       = 4;  // 被好友人么么的次数 
        optional bool   has_momo_awarded = 5 [default = false];  // 是否已经么么领奖
        repeated uint32 momo_friend_list = 6;  // 么么过的好友列表
        
        optional uint32 group_id         = 7;  // 社团ID
        optional sfixed64 leave_group_timestamp  = 8;    
        //optional bool   has_momo_awarded20 = 9; // 是否领取么么20次奖励
        //optional int32 awarded_momo_count        = 10; // 已经奖励么么次数
        repeated int32  has_momo_award_list      = 11; // 已领么么奖励列表
        repeated GroupHistory group_history_list = 12; // 社团历史记录 
    }
    
    // 打劫者
    message RobberInfo
    {
        optional uint32  id  = 1;
        optional Common.GameRes award_coin = 3; // 打劫所得金币
    }

    // 附近的玩家
    message NearbyPlayer
    {
        optional uint32 id = 1;
        optional bool   rob_flag = 2 [default = false]; // 是否打劫过
    }
    
    // 打劫
    message RobInfo
    {
        optional NearbyPlayer s_lev = 4; // S 级玩家
        optional NearbyPlayer a_lev = 5; // A 级玩家
        optional NearbyPlayer b_lev = 6; // B 级玩家
        
        //repeated uint32 filter_list   = 7; // 已经筛选过的玩家列表, 避免重复筛选
        optional int32 refresh_count = 8; // 刷新次数
        repeated int32 filter_list   = 9; // 附近的人筛选列表
    }

    // 答题信息（主要是为了答题排行榜复用RankTable）
    message ExamInfo
    {
        optional sint32     score       = 1;    // 分数
        optional sfixed64   timestamp   = 2;
    }

    // 爬塔
    message ClimbTowerInfo
    {
        optional sint32     layers      = 1;    // 通过了多少层
        optional sfixed64   timestamp   = 2;
        optional bool       cheated     = 3;    // 爬塔作弊
    }

    // 世界BOSS
    message WorldBossInfo
    {
        optional sint32     fight_count = 1;
        optional sint64     fight_hurt  = 2;    // 单次伤害

        optional uint32     id      = 5;
        optional sfixed64   guid    = 6;
        optional sfixed64   hurt    = 7;    // 一共伤害
    }

    // 人气赛跑
    message RunningRace
    {
        optional sfixed64  speed     = 1;
        optional sfixed64  timestamp = 2;
    }

    // 消息通知
    message MsgNotification
    {
        repeated Common.AwardMsg       award_msg_list = 1; // 奖励消息列表
        repeated Common.InteractiveMsg inter_msg_list = 2; // 互动消息列表
    }

    // 邮件
    message Mail
    {
        repeated Common.Mail    list    = 1;
    }

    // 赛季奖励
    message SeasonAward
    {
        message SeasonAwardMeta
        {
            optional uint32         section       = 1;
            optional uint32         rank_percent  = 2;
            repeated Common.GameRes game_res_list = 3;
            optional uint32         star          = 4;
        }
        repeated SeasonAwardMeta award_list = 1;

        // 赛季已经领过的段位奖励
        repeated sint32 awarded_section_list = 2;

        // 赛季当前排名
        optional uint32 cur_section = 10 [default = 1];
        // 赛季最高排名
        optional uint32 max_section = 11 [default = 1];
    }
    
    // 租借英雄
    message LeaseInfo
    {
        optional sint64 coin = 1; // 累计租金
    }

    message State
    {
        optional sfixed64 logout_timestamp = 1;
    }    

    message Basic
    {
        optional string platform    = 1;    // 用户所属平台
    }

    message History
    {
        optional sint32 world_boss_rank = 1;
        optional sint32 terr_dog_count  = 2;
        optional sint32 last_jump_step  = 3;
        optional sint32 jump_step_count = 4;
        optional sint32 terr_rob_count  = 5;
        optional sfixed64 send_group_mail_time = 6;
        optional sint32   running_race_rank    = 7;
        optional sfixed64 tournament_total_time  = 8;
        optional sint32 terr_stall_awarded_count = 9;  // 摆摊并获得奖励次数
        optional sint32 group_battle_win_count   = 10; // 社团战获胜次数
    }

    message Tournament
    {
        repeated Common.TournamentMsg msg_list  = 1;
        optional sint32               max_layer = 2;
    }

    message Lottery
    {     
        optional sint64 gold_egg_count      = 1;
        optional sint32 egg_lottery_rank_id = 2; // 当前扭蛋抽奖排行版活动ID
    }

    message GroupRecord
    {
        repeated sint64  daily_active_list   = 1; // 活跃贡献
        repeated sint64  daily_fund_list     = 2; // 经费贡献
        repeated sint32  daily_instance_list = 3; // 副本记录列表
    }

    message GroupWelfare
    {
        optional sint32  sp_count          = 1;  // 可领取体力
        optional sint32  sp_awarded_count  = 2;  // 今日已领取体力
        optional sint32  buy_sp_count      = 3;  // 购买体力福利次数
    }

    message GroupBattle
    {
        repeated Common.HeroBattleArray battle_array_list = 1;
        optional bool       participate       = 2[default = true]; // 参与偏好
        optional sint64     score             = 3;
        optional sfixed64   last_battle_time  = 4;
        optional bool       default_choose_road   = 5[default = false];
        optional Common.GroupBattleRoadType road  = 6;
        optional Common.GroupRoleFighter fighter  = 7; 
    }
    
    message GroupHegemony
    {
        repeated Common.GroupHegemonyAward award_list = 1;
    }

    message Title
    {
        repeated uint32 enable_title_list = 1;
    }
    
    // 加倍道具
    message MultipleItemList
    {
        repeated Common.MultipleItem multiple_item_list = 1;
    }
}

